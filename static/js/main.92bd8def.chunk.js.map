{"version":3,"sources":["helpers/compound-interest.js","helpers/income-tax.js","components/BarChart.js","components/MoneyInput.js","components/PercentInput.js","components/YearInput.js","App.js","index.js"],"names":["getCompoundInterest","principal","deposit","annualRate","compoundsPerYear","Math","pow","getCompoundInterestForPrincipal","compoundRate","getCompoundInterestForDeposits","getIncomeTax","annualIncome","incomeTax","BarChart","nextProps","this","chart","config","data","labels","datasets","calculateDataSet","update","Chart","canvas","type","props","options","scales","xAxes","stacked","yAxes","ticks","callback","value","numeral","format","tooltips","callbacks","label","tooltipItem","datasetIndex","yLabel","_ref","initialDeposit","backgroundColor","borderColor","borderWidth","regularDeposits","totalInterest","capitalGainsTax","_this","react_default","a","createElement","ref","Component","MoneyInput","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleInputFocus","toggleState","setState","focused","onBlur","onUpdate","state","inputValue","onFocus","handleFormChange","event","target","name","min","onChange","PercentInput","step","YearInput","max","concat","App","newValue","defineProperty","updateInitialDeposit","updateRegularDeposit","regularDeposit","updateAnnualIncome","updateInterestRate","interestRate","updateNumberOfYears","numberOfYears","handleToggle","calculateCapitalGainsTax","capitalGains","applyTax","yearlyInterest","currentPrincipal","i","grossPrincipal","round","_this2","getYearlyInterest","map","className","MoneyInput_MoneyInput","YearInput_YearInput","PercentInput_PercentInput","checked","BarChart_BarChart","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.92bd8def.chunk.js","sourcesContent":["/**\n * @param {number} principal \n * @param {number} annualRate \n * @param {number} compoundsPerYear \n * @returns {number}\n */\nlet getCompoundInterestForPrincipal = (principal, annualRate, compoundsPerYear) => (\n    principal * Math.pow(1 + annualRate / compoundsPerYear, compoundsPerYear)\n);\n\n/**\n * @param {number} deposit \n * @param {number} annualRate \n * @param {number} compoundsPerYear \n * @returns {number}\n */\nlet getCompoundInterestForDeposits = (deposit, annualRate, compoundsPerYear) => {\n    let compoundRate = annualRate / compoundsPerYear;\n\n    return deposit * ((Math.pow(1 + compoundRate, compoundsPerYear) - 1) / compoundRate);\n};\n\n/**\n * @param {number} principal\n * @param {number} deposit\n * @param {number} annualRate\n * @param {number} compoundsPerYear\n * @returns {number}\n */\nlet getCompoundInterest = (principal, deposit, annualRate, compoundsPerYear) => (\n    getCompoundInterestForPrincipal(principal, annualRate, compoundsPerYear) +\n    getCompoundInterestForDeposits(deposit, annualRate, compoundsPerYear)\n);\n\nexport default getCompoundInterest;","/**\n * @param {number} annualIncome\n * @returns {number}\n */\nlet getIncomeTax = annualIncome => {\n    let incomeTax = 0;\n\n    if (annualIncome <= 18200) {\n        incomeTax += 0;\n\n        incomeTax += (annualIncome - 0) * 0;\n    } else if (annualIncome <= 37000) {\n        incomeTax += 0;\n\n        incomeTax += (annualIncome - 18200) * 0.19;\n    } else if (annualIncome <= 87000) {\n        incomeTax += 3572;\n\n        incomeTax += (annualIncome - 37000) * 0.325;\n    } else if (annualIncome <= 180000) {\n        incomeTax += 19822;\n\n        incomeTax += (annualIncome - 87000) * 0.37;\n    } else {\n        incomeTax += 54232;\n\n        incomeTax += (annualIncome - 180000) * 0.45;\n    }\n\n    return incomeTax;\n}\n\nexport default getIncomeTax;\n","import React, { Component } from 'react'\nimport Chart from 'chart.js'\nimport numeral from 'numeral'\n\nexport default class BarChart extends Component {\n  chart\n\n  componentWillUpdate (nextProps) {\n    this.chart.config.data.labels = nextProps.labels\n    this.chart.config.data.datasets = this.calculateDataSet(nextProps.data)\n    this.chart.update()\n  }\n\n  componentDidMount () {\n    this.chart = new Chart(this.canvas, {\n      type: 'bar',\n      data: {\n        labels: this.props.labels,\n        datasets: this.calculateDataSet(this.props.data)\n      },\n      options: {\n        scales: {\n          xAxes: [\n            {\n              stacked: true\n            }\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                callback: value => numeral(value).format('$0a')\n              }\n            }\n          ]\n        },\n        tooltips: {\n          callbacks: {\n            label: (tooltipItem, data) => {\n              let label = data.datasets[tooltipItem.datasetIndex].label || ''\n\n              if (label) {\n                label += ': '\n              }\n              label += numeral(tooltipItem.yLabel).format('$0a')\n              return label\n            }\n          }\n        }\n      }\n    })\n  }\n\n  calculateDataSet ({initialDeposit, regularDeposits, totalInterest, capitalGainsTax}) {\n    return [\n      {\n        type: 'bar',\n        data: initialDeposit,\n        label: 'Initial Deposit',\n        backgroundColor: 'rgba(132,5,97,0.2)',\n        borderColor: 'rgba(132,5,97,1)',\n        borderWidth: 1,\n      },\n      {\n        type: 'bar',\n        data: regularDeposits,\n        label: 'Regular Deposits',\n        backgroundColor: 'rgba(201, 79, 167, 0.2)',\n        borderColor: 'rgba(201, 79, 167, 1)',\n        borderWidth: 1,\n      },\n      {\n        type: 'bar',\n        data: totalInterest,\n        label: 'Total Interest',\n        backgroundColor: 'rgba(221, 123, 194, 0.2)',\n        borderColor: 'rgba(221, 123, 194, 1)',\n        borderWidth: 1,\n      },\n      {\n        type: 'bar',\n        data: capitalGainsTax,\n        label: 'Tax',\n        backgroundColor: 'rgba(194,200,212,0.2)',\n        borderColor: 'rgba(194,200,212,1)',\n        borderWidth: 1,\n      }\n    ]\n  }\n\n  render () {\n    return (\n      <canvas ref={canvas => this.canvas = canvas}/>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport numeral from 'numeral'\n\nexport default class MoneyInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      focused: false,\n      inputValue: props.inputValue\n    }\n  }\n\n  toggleInputFocus = toggleState => {\n    this.setState({\n      focused: toggleState\n    })\n  }\n\n  onBlur = () => {\n    this.toggleInputFocus(false)\n    this.props.onUpdate(this.state.inputValue)\n  }\n\n  onFocus = () => {\n    this.toggleInputFocus(true)\n  }\n\n  handleFormChange = event => {\n    this.setState({\n      inputValue: event.target.value\n    })\n  }\n\n  render () {\n    return (\n      <input\n        type={this.state.focused ? 'number' : 'text'}\n        name={this.props.name}\n        min=\"0\"\n        value={!this.state.focused ? numeral(this.state.inputValue).format('$0,0') : this.state.inputValue}\n        onChange={this.handleFormChange}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport numeral from 'numeral'\n\nexport default class PercentInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      focused: false,\n      inputValue: props.inputValue\n    }\n  }\n\n  toggleInputFocus = toggleState => {\n    this.setState({\n      focused: toggleState\n    })\n  }\n\n  onBlur = () => {\n    this.toggleInputFocus(false)\n    this.props.onUpdate(this.state.inputValue)\n  }\n\n  onFocus = () => {\n    this.toggleInputFocus(true)\n  }\n\n  handleFormChange = event => {\n    this.setState({\n      inputValue: event.target.value\n    })\n  }\n\n  render () {\n    return (\n      <input\n        step=\"0.01\"\n        type={this.state.focused ? 'number' : 'text'}\n        name={this.props.name}\n        min=\"0\"\n        value={!this.state.focused ? numeral(this.state.inputValue).format('0,0.00%') : this.state.inputValue}\n        onChange={this.handleFormChange}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class YearInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      focused: false,\n      inputValue: props.inputValue\n    }\n  }\n\n  toggleInputFocus = toggleState => {\n    this.setState({\n      focused: toggleState\n    })\n  }\n\n  onBlur = () => {\n    this.toggleInputFocus(false)\n    this.props.onUpdate(this.state.inputValue)\n  }\n\n  onFocus = () => {\n    this.toggleInputFocus(true)\n  }\n\n  handleFormChange = event => {\n    this.setState({\n      inputValue: event.target.value\n    })\n  }\n\n  render () {\n    return (\n      <input\n        type={this.state.focused ? 'number' : 'text'}\n        name={this.props.name}\n        min=\"1\"\n        max=\"60\"\n        value={!this.state.focused ? `${this.state.inputValue} year${this.state.inputValue !== '1' ? 's' : ''}` : this.state.inputValue}\n        onChange={this.handleFormChange}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './App.scss'\nimport getCompoundInterest from './helpers/compound-interest'\nimport getIncomeTax from './helpers/income-tax'\nimport BarChart from './components/BarChart'\nimport MoneyInput from './components/MoneyInput'\nimport PercentInput from './components/PercentInput'\nimport YearInput from './components/YearInput'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      initialDeposit: 100,\n      regularDeposit: 0,\n      numberOfYears: 5,\n      interestRate: 0.03,\n      applyTax: true,\n      annualIncome: 60000\n    }\n  }\n\n  handleFormChange = event => {\n    let newValue = event.target.value\n    switch (event.target.name) {\n      case 'numberOfYears':\n        if (newValue < 0) {\n          newValue = 0\n        } else if (newValue > 60) {\n          newValue = 60\n        }\n        break\n      default:\n        newValue = event.target.value\n    }\n\n    this.setState({\n      [event.target.name]: newValue\n    })\n  }\n\n  updateInitialDeposit = initialDeposit => {\n    this.setState({\n      initialDeposit: initialDeposit\n    })\n  }\n\n  updateRegularDeposit = regularDeposit => {\n    this.setState({\n      regularDeposit: regularDeposit\n    })\n  }\n\n  updateAnnualIncome = annualIncome => {\n    this.setState({\n      annualIncome: annualIncome\n    })\n  }\n\n  updateInterestRate = interestRate => {\n    this.setState({\n      interestRate: interestRate\n    })\n  }\n\n  updateNumberOfYears = numberOfYears => {\n    this.setState({\n      numberOfYears: numberOfYears\n    })\n  }\n\n  handleToggle = event => {\n    this.setState({\n      [event.target.name]: !this.state[event.target.name]\n    })\n  }\n\n  getYearlyInterest () {\n    let yearlyInterest = []\n\n    let currentPrincipal = this.state.initialDeposit\n    let totalInterest = 0\n    let regularDeposits = 0\n    for (let i = 1; i <= this.state.numberOfYears; i++) {\n      regularDeposits += this.state.regularDeposit * 12\n\n      let grossPrincipal = getCompoundInterest(currentPrincipal, this.state.regularDeposit, this.state.interestRate, 12)\n\n      // The amount of money made this year in interest\n      let capitalGains = grossPrincipal - currentPrincipal - (this.state.regularDeposit * 12)\n      totalInterest += capitalGains\n\n      // Your money after you've accrued your interest for the year\n      currentPrincipal = grossPrincipal\n\n      // How much tax the government deserves from your earnt interest\n      let capitalGainsTax = 0\n      if (this.state.applyTax) {\n        capitalGainsTax = this.calculateCapitalGainsTax(capitalGains, +this.state.annualIncome)\n      }\n\n      // Your money after the government receives its entitled share of your money\n      currentPrincipal -= capitalGainsTax\n\n      totalInterest -= capitalGainsTax\n\n      yearlyInterest = yearlyInterest.concat({\n        name: `Year ${i}`,\n        principal: Math.round(currentPrincipal),\n        regularDeposits: regularDeposits,\n        capitalGainsTax: Math.round(capitalGainsTax),\n        totalInterest: Math.round(totalInterest)\n      })\n    }\n\n    return yearlyInterest\n  }\n\n  calculateCapitalGainsTax = (capitalGains, annualIncome) => {\n    let grossIncomeTax = getIncomeTax(annualIncome + capitalGains)\n    let incomeTax = getIncomeTax(annualIncome)\n\n    return grossIncomeTax - incomeTax\n  }\n\n  render () {\n    let data = {\n      initialDeposit: this.getYearlyInterest().map(yearlyInterest => this.state.initialDeposit),\n      regularDeposits: this.getYearlyInterest().map(yearlyInterest => yearlyInterest.regularDeposits),\n      totalInterest: this.getYearlyInterest().map(yearlyInterest => yearlyInterest.totalInterest),\n      capitalGainsTax: this.getYearlyInterest().map(yearlyInterest => yearlyInterest.capitalGainsTax)\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"pure-g\">\n          <div className=\"sidebar pure-u-1 pure-u-md-1-5\">\n            <h2>Your Strategy</h2>\n            <div className=\"form-group\">\n              <label>Initial Deposit</label>\n              <MoneyInput\n                name=\"initialDeposit\"\n                inputValue={this.state.initialDeposit}\n                onUpdate={this.updateInitialDeposit}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Regular Deposit</label>\n              <MoneyInput\n                name=\"regularDeposit\"\n                inputValue={this.state.regularDeposit}\n                onUpdate={this.updateRegularDeposit}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Number of Years (Max. 60)</label>\n              <YearInput\n                name=\"numberOfYears\"\n                inputValue={this.state.numberOfYears}\n                onUpdate={this.updateNumberOfYears}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Interest Rate</label>\n              <PercentInput\n                name=\"interestRate\"\n                inputValue={this.state.interestRate}\n                onUpdate={this.updateInterestRate}\n              />\n            </div>\n\n            <h2>Taxes</h2>\n            <div className=\"form-group\">\n              <label>Apply Tax</label>\n              <input type=\"checkbox\" name=\"applyTax\" checked={this.state.applyTax}\n                     onChange={this.handleToggle}/>\n            </div>\n            <div className=\"form-group\">\n              <label>Annual Income</label>\n              <MoneyInput\n                name=\"annualIncome\"\n                inputValue={this.state.annualIncome}\n                onUpdate={this.updateAnnualIncome}\n              />\n            </div>\n          </div>\n          <div className=\"content pure-u-1 pure-u-md-4-5\">\n            <h2>Results</h2>\n            <BarChart\n              labels={this.getYearlyInterest().map(yearlyInterest => yearlyInterest.name)}\n              data={data}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}